package com.revaturebank.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;

import com.revaturebank.systemclass.UserAccount;
import com.revaturebank.util.CloseStreams;
import com.revaturebank.util.Connections;

public class UserAccountDAOClass implements UserAccountDAO {
	
	@Override
	public boolean requestUserAccount(String username, String password, String ssn, String firstName, String lastName,
			                                   String email, String phone) {
		PreparedStatement ps=null;
		int bool=0;
		try(Connection conn= Connections.getConnection()){
			String sql="INSERT INTO USERACCOUNT_TEMP(USERNAME,PASSWORD, SSN,FIRSTNAME,LASTNAME,EMAIL,PHONE) VALUES (?,?,?,?,?,?,?)";
			ps=conn.prepareStatement(sql);
			ps.setString(1, username);
			ps.setString(2, password);
			ps.setString(3, ssn);
	    	ps.setString(4, firstName);
			ps.setString(5, lastName);
			ps.setString(6, email);
			ps.setString(7, phone);
			bool=ps.executeUpdate();
			
		}catch (SQLException ex) {
			ex.getStackTrace();
		}
		return (bool !=1);
	}

	@Override
	public boolean updateUserAccountPI(String username ,String ssn, String firstName, String lastName, String email, String phone) {
		PreparedStatement ps=null;
		int bool=0;
		try(Connection conn= Connections.getConnection()){
			String sql="UPDATE USERACCOUNT SET SSN=? ,FIRSTNAME=?,LASTNAME=?,EMAIL=?,PHONE=?"
					+ "WHERE USERNAME=?";
			ps=conn.prepareStatement(sql);
			ps.setString(6 , username);
			ps.setString(1, ssn);
	    	ps.setString(2, firstName);
			ps.setString(3, lastName);
			ps.setString(4, email);
			ps.setString(5, phone);
			bool=ps.executeUpdate();
			
		}catch (SQLException ex) {
			ex.getStackTrace();
		}
		return (bool !=1);	}

	@Override
	public boolean updateUserAccuntUP(String username, String password) {
		PreparedStatement ps=null;
		int bool=0;
		try(Connection conn= Connections.getConnection()){
			String sql="UPDATE USERACCOUNT SET USERNAME=?, PASSWORD=?"
					+ "WHERE USERNAME=?";
			ps=conn.prepareStatement(sql);
			ps.setString(1, username);
			ps.setString(2, password);
			ps.setString(3, username);
			bool=ps.executeUpdate();
		}catch (SQLException ex) {
			ex.getStackTrace();
		}
		return (bool !=1);	
		}

	@Override
	public UserAccount authenticate(String username, String password) throws SQLException{
		Statement stmt=null;
		ResultSet rs =null;
		try(Connection conn= Connections.getConnection()){ 
			String sql="SELECT * FROM USERS WHERE USERNAME = "+username +" AND PASSWORD =" +password;
			stmt=conn.createStatement();
			rs=stmt.executeQuery(sql);
			if (rs!=null) {
           UserAccount ua= new UserAccount();
           ua.setSsNumber(rs.getString(1));
           ua.setFirsName(rs.getString(2));
           ua.setLastName(rs.getString(3));
           ua.setEmail(rs.getString(4));
           ua.setPhone(rs.getString(5));
           ua.setAccountNumber(rs.getString(6));
           ua.setUsername(rs.getString(7));
           ua.setPassword(rs.getString(8));
           ua.setBalanceAccount(rs.getDouble(9));
           
           return ua;
			}else return null;
        
       }        
       finally {
    	   CloseStreams.close(stmt);
			   CloseStreams.close(rs);
       }
	}

	@Override
	public boolean deleteUserAccount(String accountNumber, String username) {
		PreparedStatement ps=null;
		int bool=0;
		try(Connection conn= Connections.getConnection()){
			String sql="DELETE USERACCOUNT WHERE ACCOUNT_NUM=? AND USERNAME=?";
			ps=conn.prepareStatement(sql);
			ps.setString(1, accountNumber);
			ps.setString(2, username);
			bool=ps.executeUpdate();
		}catch (SQLException ex) {
			ex.getStackTrace();
		}
		return (bool !=1);
		
	}

	@Override
	public HashMap<String, UserAccount> allAccountRequest() throws SQLException {
		Statement stmt=null;
		ResultSet rs =null;
		
		try(Connection conn= Connections.getConnection()){ 
			String sql="SELECT SSN,FIRST_NAME,LAST_NAME,EMAIL,PHONE,USERNAME,PASSWORD"
					+ " FROM USERACCOUNT_TEMP";
			stmt=conn.createStatement();
			rs=stmt.executeQuery(sql);
			HashMap<String,UserAccount> users =new HashMap<>();
           while(rs.next()){
           
           UserAccount ua= new UserAccount();
           ua.setSsNumber(rs.getString(1));
           ua.setFirsName(rs.getString(2));
           ua.setLastName(rs.getString(3));
           ua.setEmail(rs.getString(4));
           ua.setPhone(rs.getString(5));
           ua.setUsername(rs.getString(7));
           ua.setPassword(rs.getString(8));
           
           users.putIfAbsent(rs.getString(7), ua);
           }
        return users;
		}
       finally {
    	   CloseStreams.close(stmt);
			   CloseStreams.close(rs);
       }
	}

}
